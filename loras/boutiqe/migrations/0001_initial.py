# Generated by Django 5.0 on 2025-05-12 16:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم الفئة')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('image', models.ImageField(upload_to='categories/', verbose_name='صورة الفئة')),
            ],
            options={
                'verbose_name': 'فئة',
                'verbose_name_plural': 'الفئات',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='اسم اللون')),
                ('code', models.CharField(max_length=10, verbose_name='كود اللون')),
            ],
            options={
                'verbose_name': 'لون',
                'verbose_name_plural': 'الألوان',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='الاسم')),
                ('email', models.EmailField(max_length=254, verbose_name='البريد الإلكتروني')),
                ('subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='الموضوع')),
                ('message', models.TextField(verbose_name='الرسالة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإرسال')),
            ],
            options={
                'verbose_name': 'نموذج تواصل',
                'verbose_name_plural': 'نماذج التواصل',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='كود الكوبون')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قيمة الخصم')),
                ('discount_type', models.CharField(choices=[('fixed', 'مبلغ ثابت'), ('percentage', 'نسبة مئوية')], default='fixed', max_length=20, verbose_name='نوع الخصم')),
                ('minimum_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='الحد الأدنى للطلب')),
                ('valid_from', models.DateTimeField(verbose_name='صالح من تاريخ')),
                ('valid_to', models.DateTimeField(verbose_name='صالح حتى تاريخ')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('max_uses', models.PositiveIntegerField(default=1, verbose_name='أقصى عدد استخدامات')),
                ('current_uses', models.PositiveIntegerField(default=0, verbose_name='عدد الاستخدامات الحالي')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'كوبون خصم',
                'verbose_name_plural': 'كوبونات الخصم',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='المقاس')),
            ],
            options={
                'verbose_name': 'مقاس',
                'verbose_name_plural': 'المقاسات',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='مفتاح الجلسة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'عربة تسوق',
                'verbose_name_plural': 'عربات التسوق',
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateTimeField(auto_now_add=True, verbose_name='وقت الاستخدام')),
                ('order_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قيمة الطلب')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قيمة الخصم')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boutiqe.coupon', verbose_name='الكوبون')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'استخدام كوبون',
                'verbose_name_plural': 'استخدامات الكوبونات',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, unique=True, verbose_name='رقم الطلب')),
                ('status', models.CharField(choices=[('pending', 'بانتظار الدفع'), ('processing', 'قيد التحضير'), ('shipped', 'تم الشحن'), ('delivered', 'تم التوصيل'), ('cancelled', 'ملغي')], default='pending', max_length=20, verbose_name='حالة الطلب')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الدفع')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('shipping_address', models.TextField(blank=True, null=True, verbose_name='عنوان الشحن')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم الهاتف')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب',
                'verbose_name_plural': 'الطلبات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, verbose_name='رقم الطلب')),
                ('reason', models.TextField(verbose_name='سبب الإلغاء')),
                ('phone', models.CharField(max_length=20, verbose_name='رقم هاتف للتواصل')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('is_approved', models.BooleanField(default=False, verbose_name='تمت الموافقة')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_requests', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب إلغاء',
                'verbose_name_plural': 'طلبات الإلغاء',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='اسم المنتج')),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('description', models.TextField(verbose_name='وصف المنتج')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='السعر')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='سعر الخصم')),
                ('in_stock', models.BooleanField(default=True, verbose_name='متوفر')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مميز')),
                ('is_new', models.BooleanField(default=False, verbose_name='جديد')),
                ('is_sale', models.BooleanField(default=False, verbose_name='عرض خاص')),
                ('sku', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='رمز المنتج')),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='الكمية المتوفرة')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='boutiqe.category', verbose_name='الفئة')),
                ('colors', models.ManyToManyField(blank=True, to='boutiqe.color', verbose_name='الألوان المتاحة')),
                ('sizes', models.ManyToManyField(blank=True, to='boutiqe.size', verbose_name='المقاسات المتاحة')),
            ],
            options={
                'verbose_name': 'منتج',
                'verbose_name_plural': 'المنتجات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='الكمية')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='boutiqe.order', verbose_name='الطلب')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='boutiqe.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر الطلب',
                'verbose_name_plural': 'عناصر الطلب',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم الخصم')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف الخصم')),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='نسبة الخصم (%)')),
                ('start_date', models.DateTimeField(verbose_name='تاريخ البدء')),
                ('end_date', models.DateTimeField(verbose_name='تاريخ الانتهاء')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('categories', models.ManyToManyField(blank=True, to='boutiqe.category', verbose_name='الفئات المشمولة')),
                ('products', models.ManyToManyField(blank=True, to='boutiqe.product', verbose_name='المنتجات المشمولة')),
            ],
            options={
                'verbose_name': 'خصم',
                'verbose_name_plural': 'الخصومات',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='صورة المنتج')),
                ('is_main', models.BooleanField(default=False, verbose_name='صورة رئيسية')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='boutiqe.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'صورة المنتج',
                'verbose_name_plural': 'صور المنتجات',
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 نجمة'), (2, '2 نجوم'), (3, '3 نجوم'), (4, '4 نجوم'), (5, '5 نجوم')], verbose_name='التقييم')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='التعليق')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ التقييم')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='boutiqe.product', verbose_name='المنتج')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'تقييم المنتج',
                'verbose_name_plural': 'تقييمات المنتجات',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default='المملكة العربية السعودية', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_count', models.PositiveIntegerField(default=0, verbose_name='الكمية المتوفرة')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boutiqe.color', verbose_name='اللون')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='boutiqe.product', verbose_name='المنتج')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boutiqe.size', verbose_name='المقاس')),
            ],
            options={
                'verbose_name': 'تنوع المنتج',
                'verbose_name_plural': 'تنوعات المنتج',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='الكمية')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='boutiqe.cart', verbose_name='عربة التسوق')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boutiqe.color', verbose_name='اللون')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boutiqe.product', verbose_name='المنتج')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boutiqe.size', verbose_name='المقاس')),
            ],
            options={
                'verbose_name': 'عنصر السلة',
                'verbose_name_plural': 'عناصر السلة',
            },
        ),
        migrations.CreateModel(
            name='TrendingCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم المجموعة')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(verbose_name='وصف المجموعة')),
                ('image', models.ImageField(upload_to='collections/', verbose_name='صورة المجموعة')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('products', models.ManyToManyField(related_name='collections', to='boutiqe.product', verbose_name='المنتجات')),
            ],
            options={
                'verbose_name': 'مجموعة رائجة',
                'verbose_name_plural': 'المجموعات الرائجة',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='مفتاح الجلسة')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boutiqe.product', verbose_name='المنتج')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'قائمة المفضلة',
                'verbose_name_plural': 'قوائم المفضلة',
            },
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(condition=models.Q(('session_key__isnull', False), ('user__isnull', False)), fields=('user', 'session_key'), name='unique_user_session'),
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(condition=models.Q(('session_key__isnull', True), ('user__isnull', False)), fields=('user',), name='unique_user'),
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(condition=models.Q(('session_key__isnull', False), ('user__isnull', True)), fields=('session_key',), name='unique_session'),
        ),
        migrations.AlterUniqueTogether(
            name='couponusage',
            unique_together={('coupon', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='productrating',
            unique_together={('user', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='productvariation',
            unique_together={('product', 'color', 'size')},
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('user', 'product'), name='unique_user_product_wishlist'),
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(condition=models.Q(('session_key__isnull', False)), fields=('session_key', 'product'), name='unique_session_product_wishlist'),
        ),
    ]
